// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum FeedbackType {
  feature_request
  bug_report
  general
}

enum Role {
  user
  admin
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String?
  roles     Role?    @default(user)
  createdAt DateTime @default(now())
  notes     Note[]
  statuses  Status[]
  pets      Pet[]
  feedbacks Feedback[]
  @@map("users")
}

model Note {
  id        Int      @id @default(autoincrement())
  userId    Int
  content   String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  @@map("notes")
}
model Status {
  id          Int      @id @default(autoincrement())
  userId      Int
  description String
  imageUrl    String?
  createdAt   DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  @@map("statuses")
}

model Pet {
  id        Int      @id @default(autoincrement())
  ownerId   Int
  petName   String
  rarity    String
  owner     User     @relation(fields: [ownerId], references: [id])
  @@map("pets")
}

model Feedback {
  id        Int      @id @default(autoincrement())
  userId    Int
  type      FeedbackType
  message   String
  rating    Int?
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  @@map("feedbacks")
}